@import url("https://use.typekit.net/qfe6cro.css");
@import url('https://fonts.googleapis.com/css2?family=Cutive+Mono&display=swap');


/* ################################################################################################

		Rodrigo Gouveia
		Type & Interaction - Spring 2024

		Instructors:
		Michael Fehrenbach , Eric Li

		Table of Contents:
		01 - Root Variables
		02 - General Styles & Classes
		03 - H2s nitpicking by JS
		04 - JS generated text & Animations
		05 - Formatting Are.na Styles
		06 - Background Effects
		07 - Media Queries





################################################################################################### */




/* ######## 01 - Root Variables ################################################################### */

/* adding my root elements */
:root {
	--font-size: 18px;
	--line-height: 125%;
	--color: rgb(243, 243, 243);

	--gutter: calc(var(--font-size) * 2)
}

html {
	scroll-behavior: smooth;
  }


/* ######## 01 - General Styles & Classes */

/* Major selections for the whole body and seeting up some basic styles */
body {
	font-size: var(--font-size);
	line-height: var(--line-height);
	padding-top: calc(var(--gutter) * 1);
	padding-right: var(--gutter);
	padding-left: var(--gutter);
	padding-bottom: calc(var(--gutter) * 2);
	display: flex;
	flex-direction: column;
	row-gap: var(--gutter);
	justify-content: space-between;
	background-color: #000000;
	color: var(--color);
	font-family: "peridot-pe-variable", sans-serif;
}

header {
    margin-top: 65vh;
	padding-right: var(--gutter);
	padding-left: var(--gutter);
}

header p {
	font-size: calc(var(--font-size) * 1.5);
	padding-bottom: var(--gutter);
	padding-left: 8px;
}

a {
	color: rgb(204, 208, 223);
	text-decoration: underline;
}

a:hover {
	color: crimson;
	animation: glitchAniSpan 1s ease-in infinite;
}

h1 {
	font-size: calc(var(--font-size) * 8);
	line-height: calc(var(--line-height) * .7);
	font-variation-settings: "wght" 500;
	text-transform: uppercase;
	padding-bottom: var(--gutter);
	word-break: break-all;
}

p em {
	font-size: calc(var(--font-size) * .7);
	color: rgb(170, 170, 170);
	text-transform: uppercase;
	padding-left: 4px;
	letter-spacing: 2px;
}

footer {
	font-size: calc(var(--font-size) * 0.75);
	font-weight: 200;
	position: fixed;
	bottom: 300px;
	right:-235px;
	display: flex;
	text-transform: uppercase;
	transform: rotate(270deg);
	color: gray;
	
}

#channel-users{
	display: flex;
}

#channel-users address{
	margin-left: 20px;
}

.authors {
	text-align: right;
}

nav {
    font-size: calc(var(--font-size) * 0.75);
    font-weight: 200;
    position: fixed;
    display: flex;
    text-transform: uppercase;
    transform: rotate(270deg);
    transform-origin: left top;
    color: gray;
    width: 90vh;
    bottom: 10px;
    justify-content: space-between;
    left: 10px;
}

nav a {
	padding-left: 20px;
}


/* ######## 03 - H2s nitpicking by JS ############################################################# */

/* Here I set up all the different H2s that are expected to show up in the website pulled from Are.na */
h2 {
	font-size: calc(var(--font-size) * 4);
	line-height: calc(var(--line-height) * .7);
	text-transform: uppercase;
	word-break: break-all;
}

.h2-long {
	/* color: crimson; */
	word-break: break-all;
}

.h2-long2 {
	font-size: calc(var(--font-size) * 3);
	line-height: calc(var(--line-height) * .8);
	word-break: break-all;
}




/* ######## 04 - JS generated text & Animations ################################################### */

/* style for the fake text generated by arena */
.fakeText span {
    color: crimson;
    animation: glitchAniSpan .5s ease-in infinite;
}

.fakeText h2 {
	color: crimson;
	animation: 1.5s ease-in infinite glitchAnih2;
}

.glitch p{
	color: crimson;
	animation: glitchAniScroll .5s ease-in infinite;
}

.glitch h2{
	color: crimson;
	animation: glitchAniScroll .5s ease-in infinite;
}

.glitch img{
	background-color: crimson;
	filter: blur(30px);
	animation: glitchAniScroll .5s ease-in infinite;
}

.glitch {
	filter: blur(5px);
	animation: glitchAniScroll .5s ease-in infinite;
}

@keyframes glitchAnih2 {
	0% {
		opacity: 90%;
		transform: translate(0px, 0px);
		text-shadow: 
			2px 2px rgb(28, 236, 255, 0.2),
			-2px -2px rgb(255, 82, 209, 0.2);
	}

	50% {
		opacity: 60%;
		transform: translate(1px, 1px);
		text-shadow: 
			-2px -2px rgb(175, 223, 255, 0.3),
			2px 2px rgb(255, 82, 209, 0.3);
	}

	100% {
		opacity: 90%;
		transform: translate(0px, 0px);
		text-shadow: 
			2px 2px rgb(28, 236, 255, 0.2),
			-2px -2px rgb(255, 82, 209, 0.2);
	}
}


@keyframes glitchAniSpan {
    0% {
        opacity: 80%;
        transform: translate(0px, 0px);
    }

    50% {
        opacity: 70%;
        transform: translate(2px, 2px);
    }

    100% {
        opacity: 80%;
        transform: translate(0px, 0px);
    }
}

@keyframes glitchAniScroll {
    0% {
        opacity: 60%;
        transform: translate(0px, 0px);
		filter: blur(2px) hue-rotate(25deg);
    }

    50% {
        opacity: 40%;
        transform: translate(2px, 2px);
		filter: blur(5px) hue-rotate(25deg);
    }

    100% {
        opacity: 60%;
        transform: translate(0px, 0px);
		filter: blur(2px) hue-rotate(25deg);
    }
}





/* ######## 05 - Formatting Are.na Styles ######################################################### */

/* This seeting up the text style for the Are.na text items */

/* Setting up the position of blocks */
.content-block {
	margin-left: auto;
	margin-right: auto;
	max-width: 1400px;
	width: 100%;
	height: auto;
	display: flex;
	align-items: center;
	flex-wrap: wrap;
}

.content-block-reverse {
	margin-left: auto;
	margin-right: auto;
	max-width: 1400px;
	width: 100%;
	height: auto;
	display: flex;
	align-items: center;
	flex-wrap: wrap;
	flex-direction: row-reverse;
}

.image, .data, .link, .pdf, .text {
	width: 50%;
}

.type {
	text-transform: uppercase;
	color: gray;
}

/* Setting up the style for the type:TEXT */
.text p, .text em {
	font-family: 'Cutive Mono', monospace;
	font-size: calc(var(--font-size)* 1.5);
	line-height: var(--line-height);
	padding-bottom: calc(var(--gutter) * 1);
	padding-left: var(--gutter);

	/* color: crimson; */
}

/* This is trying to contain texts that are too long inside of a box */
.text {
	height: 80vh;
	overflow: auto;
	display: flex;
	flex-direction: column;
    justify-content: center;
}

/* Setting up the style for the type:IMAGE*/
.image {
	display: flex;
	flex-direction: column;
	align-items: center;
}

picture {
    width: 100%;
    height: 100%;
}

picture img {
	max-height: 85vh;
}

.image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* Setting up the style for the type:LINK */
.link picture{
	display: flex;
	flex-direction: column;
	align-items: center;
}

.link img {
	width: 100%;
    height: 100%;
    object-fit: cover;
}


/* Here is the settings for the info items inside of eeach block */
li {
	margin-bottom: calc(var(--gutter) * 4);
}

li.content-block {
    height: 90vh;
}

.data {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	padding-top: calc(var(--gutter) * 2);
	padding-left: calc(var(--gutter) * 1.5);
	padding-bottom: calc(var(--gutter) * 0.5);
}

.data p {
	padding-bottom: var(--gutter);
	font-size: calc(var(--font-size)* 0.9);
	line-height: calc(var(--line-height)* 1.2);
	font-weight: 100;
	color: rgb(172, 172, 172);
}

.description {
	padding-top: var(--gutter);
}

.img-blended {
	mix-blend-mode: overlay;
}





/* ######## 06 - Background Effects ############################################################### */

.noise {
	position: fixed;
	top: 0;
	left: 0;
	height: 100vh;
	width: 100vw;
	z-index: -10000;
	/* mix-blend-mode: overlay; */
	opacity: 20%;
	filter: blur(1px);
}

.noise img {
	width: 100%;
	height: 100%;
	object-fit: cover;
}

.noise-scroll {
	/* filter: blur(3px); */
	opacity: 50%;
	transform: scale(3);
	mix-blend-mode: overlay;
}



/* ######## 07 - Media Queries #################################################################### */

/* Here is the setting for different screens */

@media (max-width: 1000px) {

	.data {
		padding-left: calc(var(--gutter) * 1);
	}

	h2 {
		font-size: calc(var(--font-size) * 2.8);
		line-height: calc(var(--line-height) * .7);
	}

	.h2-long{
		font-size: calc(var(--font-size) * 2.5);
		line-height: calc(var(--line-height) * .7);
	}

	.h2-long2 {
		font-size: calc(var(--font-size) * 2.3);
		line-height: calc(var(--line-height) * .7);
	}

}

@media (max-width: 768px) {


	h2 {
		font-size: calc(var(--font-size) * 2.5);
		line-height: calc(var(--line-height) * .7);
	}

	.h2-long{
		font-size: calc(var(--font-size) * 2.3);
		line-height: calc(var(--line-height) * .7);
	}

	.h2-long2 {
		font-size: calc(var(--font-size) * 2);
		line-height: calc(var(--line-height) * .7);
	}

}

@media (max-width: 650px) {


	.data p {
		font-size: calc(var(--font-size) * 0.8);
		line-height: calc(var(--line-height) * 1);
	}

	h2 {
		font-size: calc(var(--font-size) * 2.3);
		line-height: calc(var(--line-height) * .7);
	}

	.h2-long{
		font-size: calc(var(--font-size) * 2.1);
		line-height: calc(var(--line-height) * .7);
	}

	.h2-long2 {
		font-size: calc(var(--font-size) * 1.9);
		line-height: calc(var(--line-height) * .7);
	}

}

@media (max-width: 600px) {
	:root {
		--font-size: 16px;
	}

	body {
		/* background-color: tomato; */
	}

	picture img {
		max-height: 45vh;
	}

	h2 {
		font-size: calc(var(--font-size) * 2);
		line-height: calc(var(--line-height) * .7);
	}

	.h2-long{
		font-size: calc(var(--font-size) * 1.8);
		line-height: calc(var(--line-height) * .7);
	}

	.h2-long2 {
		font-size: calc(var(--font-size) * 1.6);
		line-height: calc(var(--line-height) * .9);
	}

	.content-blocks {
		height: auto;
		width: auto;
		display: flex;
		flex-direction: column;
		align-items: center;
	}

	.image, .data, .link, .pdf, .text {
		width: 100%;
	}

	.data {
		padding-top: calc(var(--gutter) * 1);
		padding-left: 0;

	}

	.content-block div {
		padding-bottom: calc(var(--gutter) * 1);
	}
}

@media (max-width: 425px) {

	body {
		padding-left: calc(var(--gutter) * 0.5);
		padding-right: calc(var(--gutter) * 0.5);
	}

}

